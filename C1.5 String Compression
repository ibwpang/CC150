import java.util.*;

public class StringCompression {

	/**
    	* Version 1. Space: O(1). Single letter doesn't append occurrance.
	*/
	public static String compress1(String str) {
		if (str == null || str.length() == 0) {
			return str;
		}

		char[] chars = str.toCharArray();
		
		int i = 0;
		int count = 0;
		for (int j = 0; j <= chars.length; j++) {
			if (j == chars.length || chars[i] != chars[j]) {
				i++;
				if (count > 1) {
					String cnt = String.valueOf(count);
					for (int k = 0; k < cnt.length(); k++) {
						chars[i++] = cnt.charAt(k);
					}
				} 
				if (j < chars.length) {
					chars[i] = chars[j];
				}
				count = 0;
			}
			count++;
		}

		StringBuilder sb = new StringBuilder();
		for (int idx = 0; idx < i; idx++) {
			sb.append(chars[idx]);
		}
		return sb.toString();
	}

	/**
    	* Version 2. Space: O(n). Single letter append occurrance.
	*/
	public static String compress2(String str) {
		if (str == null || str.length() == 0) {
			return str;
		}

		StringBuilder sb = new StringBuilder();

		int i = 0;
		int count = 0;
		for (int j = 0; j <= str.length(); j++) {
			if (j == str.length() || str.charAt(i) != str.charAt(j)) {
				sb.append(str.charAt(i));
				sb.append(String.valueOf(count));
				i = j;
				count = 0;
			}
			count++;
		}

		return sb.toString();
	}

	public static void main(String[] args) {
		System.out.println(compress2("aabcdccccca"));
	}
}
